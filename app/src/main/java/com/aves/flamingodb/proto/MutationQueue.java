// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firebase/firestore/proto/mutation.proto

package com.aves.flamingodb.proto;

/**
 * <pre>
 * Each user gets a single queue of WriteBatches to apply to the server.
 * MutationQueue tracks the metadata about the queue.
 * </pre>
 *
 * Protobuf type {@code firestore.client.MutationQueue}
 */
public  final class MutationQueue extends
    com.google.protobuf.GeneratedMessageLite<
        MutationQueue, MutationQueue.Builder> implements
    // @@protoc_insertion_point(message_implements:firestore.client.MutationQueue)
    MutationQueueOrBuilder {
  private MutationQueue() {
    lastStreamToken_ = com.google.protobuf.ByteString.EMPTY;
  }
  public static final int LAST_ACKNOWLEDGED_BATCH_ID_FIELD_NUMBER = 1;
  private int lastAcknowledgedBatchId_;
  /**
   * <pre>
   * An identifier for the highest numbered batch that has been acknowledged by
   * the server. All WriteBatches in this queue with batch_ids less than or
   * equal to this value are considered to have been acknowledged by the
   * server.
   * </pre>
   *
   * <code>int32 last_acknowledged_batch_id = 1;</code>
   * @return The lastAcknowledgedBatchId.
   */
  @Override
  public int getLastAcknowledgedBatchId() {
    return lastAcknowledgedBatchId_;
  }
  /**
   * <pre>
   * An identifier for the highest numbered batch that has been acknowledged by
   * the server. All WriteBatches in this queue with batch_ids less than or
   * equal to this value are considered to have been acknowledged by the
   * server.
   * </pre>
   *
   * <code>int32 last_acknowledged_batch_id = 1;</code>
   * @param value The lastAcknowledgedBatchId to set.
   */
  private void setLastAcknowledgedBatchId(int value) {
    
    lastAcknowledgedBatchId_ = value;
  }
  /**
   * <pre>
   * An identifier for the highest numbered batch that has been acknowledged by
   * the server. All WriteBatches in this queue with batch_ids less than or
   * equal to this value are considered to have been acknowledged by the
   * server.
   * </pre>
   *
   * <code>int32 last_acknowledged_batch_id = 1;</code>
   */
  private void clearLastAcknowledgedBatchId() {
    
    lastAcknowledgedBatchId_ = 0;
  }

  public static final int LAST_STREAM_TOKEN_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString lastStreamToken_;
  /**
   * <pre>
   * A stream token that was previously sent by the server.
   * See StreamingWriteRequest in datastore.proto for more details about usage.
   * After sending this token, earlier tokens may not be used anymore so only a
   * single stream token is retained.
   * </pre>
   *
   * <code>bytes last_stream_token = 2;</code>
   * @return The lastStreamToken.
   */
  @Override
  public com.google.protobuf.ByteString getLastStreamToken() {
    return lastStreamToken_;
  }
  /**
   * <pre>
   * A stream token that was previously sent by the server.
   * See StreamingWriteRequest in datastore.proto for more details about usage.
   * After sending this token, earlier tokens may not be used anymore so only a
   * single stream token is retained.
   * </pre>
   *
   * <code>bytes last_stream_token = 2;</code>
   * @param value The lastStreamToken to set.
   */
  private void setLastStreamToken(com.google.protobuf.ByteString value) {
    Class<?> valueClass = value.getClass();
  
    lastStreamToken_ = value;
  }
  /**
   * <pre>
   * A stream token that was previously sent by the server.
   * See StreamingWriteRequest in datastore.proto for more details about usage.
   * After sending this token, earlier tokens may not be used anymore so only a
   * single stream token is retained.
   * </pre>
   *
   * <code>bytes last_stream_token = 2;</code>
   */
  private void clearLastStreamToken() {
    
    lastStreamToken_ = getDefaultInstance().getLastStreamToken();
  }

  public static com.aves.flamingodb.proto.MutationQueue parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.aves.flamingodb.proto.MutationQueue parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.aves.flamingodb.proto.MutationQueue parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.aves.flamingodb.proto.MutationQueue parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.aves.flamingodb.proto.MutationQueue parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.aves.flamingodb.proto.MutationQueue parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.aves.flamingodb.proto.MutationQueue parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.aves.flamingodb.proto.MutationQueue parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.aves.flamingodb.proto.MutationQueue parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.aves.flamingodb.proto.MutationQueue parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.aves.flamingodb.proto.MutationQueue parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.aves.flamingodb.proto.MutationQueue parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.aves.flamingodb.proto.MutationQueue prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Each user gets a single queue of WriteBatches to apply to the server.
   * MutationQueue tracks the metadata about the queue.
   * </pre>
   *
   * Protobuf type {@code firestore.client.MutationQueue}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.aves.flamingodb.proto.MutationQueue, Builder> implements
      // @@protoc_insertion_point(builder_implements:firestore.client.MutationQueue)
      com.aves.flamingodb.proto.MutationQueueOrBuilder {
    // Construct using com.aves.flamingodb.proto.MutationQueue.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * An identifier for the highest numbered batch that has been acknowledged by
     * the server. All WriteBatches in this queue with batch_ids less than or
     * equal to this value are considered to have been acknowledged by the
     * server.
     * </pre>
     *
     * <code>int32 last_acknowledged_batch_id = 1;</code>
     * @return The lastAcknowledgedBatchId.
     */
    @Override
    public int getLastAcknowledgedBatchId() {
      return instance.getLastAcknowledgedBatchId();
    }
    /**
     * <pre>
     * An identifier for the highest numbered batch that has been acknowledged by
     * the server. All WriteBatches in this queue with batch_ids less than or
     * equal to this value are considered to have been acknowledged by the
     * server.
     * </pre>
     *
     * <code>int32 last_acknowledged_batch_id = 1;</code>
     * @param value The lastAcknowledgedBatchId to set.
     * @return This builder for chaining.
     */
    public Builder setLastAcknowledgedBatchId(int value) {
      copyOnWrite();
      instance.setLastAcknowledgedBatchId(value);
      return this;
    }
    /**
     * <pre>
     * An identifier for the highest numbered batch that has been acknowledged by
     * the server. All WriteBatches in this queue with batch_ids less than or
     * equal to this value are considered to have been acknowledged by the
     * server.
     * </pre>
     *
     * <code>int32 last_acknowledged_batch_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLastAcknowledgedBatchId() {
      copyOnWrite();
      instance.clearLastAcknowledgedBatchId();
      return this;
    }

    /**
     * <pre>
     * A stream token that was previously sent by the server.
     * See StreamingWriteRequest in datastore.proto for more details about usage.
     * After sending this token, earlier tokens may not be used anymore so only a
     * single stream token is retained.
     * </pre>
     *
     * <code>bytes last_stream_token = 2;</code>
     * @return The lastStreamToken.
     */
    @Override
    public com.google.protobuf.ByteString getLastStreamToken() {
      return instance.getLastStreamToken();
    }
    /**
     * <pre>
     * A stream token that was previously sent by the server.
     * See StreamingWriteRequest in datastore.proto for more details about usage.
     * After sending this token, earlier tokens may not be used anymore so only a
     * single stream token is retained.
     * </pre>
     *
     * <code>bytes last_stream_token = 2;</code>
     * @param value The lastStreamToken to set.
     * @return This builder for chaining.
     */
    public Builder setLastStreamToken(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setLastStreamToken(value);
      return this;
    }
    /**
     * <pre>
     * A stream token that was previously sent by the server.
     * See StreamingWriteRequest in datastore.proto for more details about usage.
     * After sending this token, earlier tokens may not be used anymore so only a
     * single stream token is retained.
     * </pre>
     *
     * <code>bytes last_stream_token = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearLastStreamToken() {
      copyOnWrite();
      instance.clearLastStreamToken();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:firestore.client.MutationQueue)
  }
  @Override
  @SuppressWarnings({"unchecked", "fallthrough"})
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.aves.flamingodb.proto.MutationQueue();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          Object[] objects = new Object[] {
            "lastAcknowledgedBatchId_",
            "lastStreamToken_",
          };
          String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0004\u0002\n" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.aves.flamingodb.proto.MutationQueue> parser = PARSER;
        if (parser == null) {
          synchronized (com.aves.flamingodb.proto.MutationQueue.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.aves.flamingodb.proto.MutationQueue>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:firestore.client.MutationQueue)
  private static final com.aves.flamingodb.proto.MutationQueue DEFAULT_INSTANCE;
  static {
    MutationQueue defaultInstance = new MutationQueue();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      MutationQueue.class, defaultInstance);
  }

  public static com.aves.flamingodb.proto.MutationQueue getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<MutationQueue> PARSER;

  public static com.google.protobuf.Parser<MutationQueue> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

