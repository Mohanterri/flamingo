// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firebase/firestore/proto/maybe_document.proto

package com.aves.flamingodb.proto;

public interface MaybeDocumentOrBuilder extends
    // @@protoc_insertion_point(interface_extends:firestore.client.MaybeDocument)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Used if the document is known to not exist.
   * </pre>
   *
   * <code>.firestore.client.NoDocument no_document = 1;</code>
   * @return Whether the noDocument field is set.
   */
  boolean hasNoDocument();
  /**
   * <pre>
   * Used if the document is known to not exist.
   * </pre>
   *
   * <code>.firestore.client.NoDocument no_document = 1;</code>
   * @return The noDocument.
   */
  com.google.firebase.firestore.proto.NoDocument getNoDocument();

  /**
   * <pre>
   * The document (if it exists).
   * </pre>
   *
   * <code>.google.firestore.v1.Document document = 2;</code>
   * @return Whether the document field is set.
   */
  boolean hasDocument();
  /**
   * <pre>
   * The document (if it exists).
   * </pre>
   *
   * <code>.google.firestore.v1.Document document = 2;</code>
   * @return The document.
   */
  com.google.firestore.v1.Document getDocument();

  /**
   * <pre>
   * Used if the document is known to exist but its data is unknown.
   * </pre>
   *
   * <code>.firestore.client.UnknownDocument unknown_document = 3;</code>
   * @return Whether the unknownDocument field is set.
   */
  boolean hasUnknownDocument();
  /**
   * <pre>
   * Used if the document is known to exist but its data is unknown.
   * </pre>
   *
   * <code>.firestore.client.UnknownDocument unknown_document = 3;</code>
   * @return The unknownDocument.
   */
  com.google.firebase.firestore.proto.UnknownDocument getUnknownDocument();

  /**
   * <pre>
   * `has_committed_mutations` marks documents that were written to the remote
   * document store based on a write acknowledgment. These documents are
   * potentially inconsistent with the backend's copy and use the write's
   * commit version as their document version.
   * </pre>
   *
   * <code>bool has_committed_mutations = 4;</code>
   * @return The hasCommittedMutations.
   */
  boolean getHasCommittedMutations();

  public com.google.firebase.firestore.proto.MaybeDocument.DocumentTypeCase getDocumentTypeCase();
}
