// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/firebase/firestore/proto/target.proto

package com.aves.flamingodb.proto;

public interface TargetOrBuilder extends
    // @@protoc_insertion_point(interface_extends:firestore.client.Target)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * An auto-generated sequential numeric identifier for the target. This
   * serves as the identity of the target, and once assigned never changes.
   * </pre>
   *
   * <code>int32 target_id = 1;</code>
   * @return The targetId.
   */
  int getTargetId();

  /**
   * <pre>
   * The last snapshot version received from the Watch Service for this target.
   * This is the same value as TargetChange.read_time
   * https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/firestore.proto#L735
   * </pre>
   *
   * <code>.google.protobuf.Timestamp snapshot_version = 2;</code>
   * @return Whether the snapshotVersion field is set.
   */
  boolean hasSnapshotVersion();
  /**
   * <pre>
   * The last snapshot version received from the Watch Service for this target.
   * This is the same value as TargetChange.read_time
   * https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/firestore.proto#L735
   * </pre>
   *
   * <code>.google.protobuf.Timestamp snapshot_version = 2;</code>
   * @return The snapshotVersion.
   */
  com.google.protobuf.Timestamp getSnapshotVersion();

  /**
   * <pre>
   * An opaque, server-assigned token that allows watching a query to be
   * resumed after disconnecting without retransmitting all the data that
   * matches the query. The resume token essentially identifies a point in
   * time from which the server should resume sending results.
   * This is related to the snapshot_version in that the resume_token
   * effectively also encodes that value, but the resume_token is opaque and
   * sometimes encodes additional information.
   * A consequence of this is that the resume_token should be used when asking
   * the server to reason about where this client is in the watch stream, but
   * the client should use the snapshot_version for its own purposes.
   * This is the same value as TargetChange.resume_token
   * https://github.com/googleapis/googleapis/blob/master/google/firestore/v1/firestore.proto#L723
   * </pre>
   *
   * <code>bytes resume_token = 3;</code>
   * @return The resumeToken.
   */
  com.google.protobuf.ByteString getResumeToken();

  /**
   * <pre>
   * A sequence number representing the last time this query was listened to,
   * used for garbage collection purposes.
   * Conventionally this would be a timestamp value, but device-local clocks
   * are unreliable and they must be able to create new listens even while
   * disconnected. Instead this should be a monotonically increasing number
   * that's incremented on each listen call.
   * This is different from the target_id since the target_id is an immutable
   * identifier assigned to the Target on first use while
   * last_listen_sequence_number is updated every time the query is listened
   * to.
   * </pre>
   *
   * <code>int64 last_listen_sequence_number = 4;</code>
   * @return The lastListenSequenceNumber.
   */
  long getLastListenSequenceNumber();

  /**
   * <pre>
   * A target specified by a query.
   * </pre>
   *
   * <code>.google.firestore.v1.Target.QueryTarget query = 5;</code>
   * @return Whether the query field is set.
   */
  boolean hasQuery();
  /**
   * <pre>
   * A target specified by a query.
   * </pre>
   *
   * <code>.google.firestore.v1.Target.QueryTarget query = 5;</code>
   * @return The query.
   */
  com.google.firestore.v1.Target.QueryTarget getQuery();

  /**
   * <pre>
   * A target specified by a set of document names.
   * </pre>
   *
   * <code>.google.firestore.v1.Target.DocumentsTarget documents = 6;</code>
   * @return Whether the documents field is set.
   */
  boolean hasDocuments();
  /**
   * <pre>
   * A target specified by a set of document names.
   * </pre>
   *
   * <code>.google.firestore.v1.Target.DocumentsTarget documents = 6;</code>
   * @return The documents.
   */
  com.google.firestore.v1.Target.DocumentsTarget getDocuments();

  /**
   * <pre>
   * Denotes the maximum snapshot version at which the associated query view
   * contained no limbo documents.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_limbo_free_snapshot_version = 7;</code>
   * @return Whether the lastLimboFreeSnapshotVersion field is set.
   */
  boolean hasLastLimboFreeSnapshotVersion();
  /**
   * <pre>
   * Denotes the maximum snapshot version at which the associated query view
   * contained no limbo documents.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_limbo_free_snapshot_version = 7;</code>
   * @return The lastLimboFreeSnapshotVersion.
   */
  com.google.protobuf.Timestamp getLastLimboFreeSnapshotVersion();

  public com.aves.flamingodb.proto.Target.TargetTypeCase getTargetTypeCase();
}
